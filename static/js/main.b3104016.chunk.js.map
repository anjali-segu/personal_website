{"version":3,"sources":["utils/theme.tsx","atom/NavbarLink/index.tsx","atom/SidebarLink/index.tsx","molecule/MobileAppbar/index.tsx","organism/Navbar/index.tsx","atom/HeaderPanel/index.tsx","atom/Panel/index.tsx","molecule/ProjectCard/index.tsx","molecule/Bio/index.tsx","atom/SummaryCard/index.tsx","molecule/Summary/index.tsx","atom/ProjectDetail/index.tsx","molecule/Showcase/index.tsx","organism/Home/index.tsx","molecule/FunFacts/index.tsx","atom/PhotoGrid/index.tsx","organism/About/index.tsx","atom/IconBar/index.tsx","organism/Footer/index.tsx","molecule/PortfolioGrid/index.tsx","organism/Portfolio/index.tsx","atom/SkillsTech/index.tsx","atom/ResumeItem/index.tsx","molecule/ResumeList/index.tsx","organism/Resume/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["white","black","beige","gray","lightbeige","charcoal","tan","theme","createMuiTheme","overrides","MuiButton","contained","boxShadow","containedPrimary","color","border","backgroundColor","borderRadius","containedSecondary","containedSizeLarge","paddingBottom","paddingLeft","paddingRight","paddingTop","MuiCard","root","overflow","MuiDialog","paper","MuiAppBar","alignItems","colorPrimary","MuiTypography","h1","fontFamily","h2","h3","h4","h5","h6","spacing","factor","typography","palette","primary","main","useStyles","makeStyles","link","fontSize","NavbarLink","props","content","url","classes","Button","className","component","RouterLink","to","SidebarLink","closeHandler","history","useHistory","ListItem","button","onClick","push","ListItemText","toUpperCase","mobileAppBar","sidebar","width","MobileAppbar","React","showSidebar","setShowSidebar","AppBar","Toolbar","IconButton","edge","aria-label","Drawer","open","onClose","List","logo","height","Navbar","position","useTheme","isMobile","useMediaQuery","breakpoints","down","src","process","defaultProps","backgroundImage","image","backgroundPosition","backgroundSize","overlay","minHeight","title","HeaderPanel","Box","classnames","Typography","variant","panel","Panel","children","ProjectType","marginBottom","textAlign","subtitle","Bio","Grid","container","item","md","body","card","SummaryCard","Card","CardContent","actions","marginTop","wrapper","Summary","size","padding","imageDetail","minWidth","ProjectDetail","description","video","id","CardMedia","controls","background","filter","header","subHeader","transition","cursor","ProjectCard","projectType","setOpen","Dialog","aria-labelledby","actionWrapper","actionButton","borderColor","cardSpacer","spacer","Showcase","xs","href","target","coding","leadership","Home","Fragment","facts","factsSpacer","imagecenter","FunFacts","display","flexWrap","justifyContent","gridList","overflowY","tileData","img","PhotoGrid","GridList","cellHeight","cols","map","tile","GridListTile","key","About","iconColor","centerIcon","IconBar","footerTitle","Footer","PortfolioGrid","art","Link","Portfolio","largerimage","center","specialspacing","SkillsTech","fontStyle","fontWeight","ResumeItem","role","time","ResumeList","buttonspacing","Resume","download","App","ThemeProvider","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3104016.chunk.js","sourcesContent":["import {createMuiTheme} from '@material-ui/core/styles'\n\nexport const white = 'rgba(255, 255, 255, .97)'\nexport const black = 'rgba(0, 0, 0, .97)'\nexport const beige = 'rgba(250, 234, 185, 1)'\nexport const gray = 'rgba(245, 245, 245, 1)'\nexport const lightbeige = 'rgba(245, 236, 228, 1)'\nexport const lightblack = 'rgba(0, 0, 0, 0.7)'\nexport const charcoal = 'rgba(13, 13, 13, 1)'\nexport const tan = 'rgba(225, 168, 122,1)'\n\n\nexport const theme = createMuiTheme({\n  // Any overrides will go here ..\n  overrides: {\n    MuiButton: {\n      contained: {\n        boxShadow: 'none',\n        '&:hover': {\n          boxShadow: 'none',\n        },\n      },\n      containedPrimary: {\n        color: white,\n        border: `1px solid ${tan}`,\n        backgroundColor: 'transparent',\n        borderRadius: 0,\n        '&:hover': {\n          color: black,\n          backgroundColor: tan,\n        },\n      },\n      containedSecondary: {\n        color: white,\n        border: `1px solid ${white}`,\n        backgroundColor: 'transparent',\n        borderRadius: 0,\n        '&:hover': {\n          color: black,\n          backgroundColor: white,\n        },\n      },\n      containedSizeLarge: {\n        paddingBottom: '16px',\n        paddingLeft: '32px',\n        paddingRight: '32px',\n        paddingTop: '16px',\n      }\n    },\n    MuiCard: {\n      root: {\n        borderRadius: 0,\n        boxShadow: 'none',\n        overflow: 'unset',\n      }\n    },\n    MuiDialog: {\n      paper: {\n        borderRadius: 0,\n      }\n    },\n    MuiAppBar: {\n      root: {\n        alignItems: 'center',\n      },\n      colorPrimary: {\n        backgroundColor: 'transparent',\n        boxShadow: 'none',\n      },\n    },\n    MuiTypography: {\n      h1: {\n        fontFamily: 'Poly, serif',\n      },\n      h2: {\n        fontFamily: 'Poly, serif',\n      },\n      h3: {\n        fontFamily: 'Poly, serif',\n      },\n      h4: {\n        fontFamily: 'Poly, serif',\n        color: lightblack,\n      },\n      h5: {\n        fontFamily: 'Ubuntu, sans-serif',\n        color: lightblack,\n      },\n      h6: {\n        fontFamily: 'Ubuntu, sans-serif',\n        color: lightblack,\n      },\n    }\n  },\n  spacing: factor => `${0.25 * factor}rem`,\n  typography: {\n    fontFamily: 'Quicksand, open sans, sans-serif',\n  },\n  palette: {\n    primary: {\n      main: tan,\n    },\n  },\n})\n","import * as React from 'react'\nimport Button from '@material-ui/core/Button'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport {Link as RouterLink} from 'react-router-dom'\n\nimport {white, beige} from '../../utils/theme'\n\ninterface Props {\n  content: any,\n  url: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      link: {\n        color: white,\n        fontSize: theme.typography.h6.fontSize,\n        '&:hover': {\n          color: beige,\n        },\n      }\n    }\n  }\n)\n\nconst NavbarLink = (props:Props) => {\n  const {content, url} = props\n  const classes = useStyles()\n  return (\n    <Button\n      className={classes.link}\n      component={RouterLink}\n      to={url}\n    >\n      {content}\n    </Button>\n  )\n}\n\nexport default NavbarLink\n","import * as React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport {useHistory} from 'react-router-dom'\n\ninterface Props {\n  closeHandler: () => any,\n  content: string,\n  url: string,\n}\n\nconst SidebarLink = (props:Props) => {\n  const { closeHandler, content, url} = props\n  const history = useHistory()\n\n  return (\n    <ListItem\n      button\n      onClick={() => {\n        history.push(url)\n        closeHandler()\n      }}\n    >\n      <ListItemText\n        primary={content.toUpperCase()}\n      />\n    </ListItem>\n  )\n}\n\nexport default SidebarLink\n","import * as React from 'react'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Menu from '@material-ui/icons/Menu';\n\nimport SidebarLink from '../../atom/SidebarLink'\n\nimport {gray} from '../../utils/theme'\n\ninterface Props {}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      mobileAppBar: {\n        backgroundColor: gray,\n        alignItems: 'unset',\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n      },\n      sidebar: {\n        width: theme.spacing(48),\n      },\n    }\n  }\n)\n\nconst MobileAppbar = (props:Props) => {\n  const classes = useStyles()\n  const [showSidebar, setShowSidebar] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <AppBar className={classes.mobileAppBar}>\n        <Toolbar>\n          <IconButton\n            edge={'start'}\n            color={'inherit'}\n            aria-label={'open drawer'}\n            onClick={() => { setShowSidebar(!showSidebar) }}\n          >\n            <Menu />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        open={showSidebar}\n        onClose={() => { setShowSidebar(false) }}\n      >\n        <List className={classes.sidebar}>\n          <SidebarLink\n            closeHandler={() => { setShowSidebar(false)}}\n            content={'home'}\n            url={'/'}\n          />\n          <SidebarLink\n            closeHandler={() => { setShowSidebar(false)}}\n            content={'portfolio'}\n            url={'/portfolio'}\n          />\n\n          <SidebarLink\n            closeHandler={() => { setShowSidebar(false)}}\n            content={'about'}\n            url={'/about'}\n          />\n\n          <SidebarLink\n            closeHandler={() => { setShowSidebar(false)}}\n            content={'resume'}\n            url={'/resume'}\n          />\n\n          <SidebarLink\n            closeHandler={() => { setShowSidebar(false)}}\n            content={'contact'}\n            url={'/contact'}\n          />\n        </List>\n      </Drawer>\n    </React.Fragment>\n  )\n}\n\nexport default MobileAppbar\n","import * as React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport {Theme, useTheme, makeStyles} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\n\nimport NavbarLink from '../../atom/NavbarLink'\nimport MobileAppbar from '../../molecule/MobileAppbar'\n\ninterface Props {\n  position?: 'fixed' | 'absolute' | 'sticky' | 'relative' | undefined,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      logo: {\n        height: theme.spacing(10),\n      }\n    }\n  }\n)\n\nconst Navbar = (props:Props) => {\n  const {position} = props\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n  const classes = useStyles()\n\n  if (isMobile) {\n    return (\n      <MobileAppbar />\n    )\n  }\n\n  return (\n    <AppBar position={position}>\n      <Toolbar>\n        <NavbarLink\n          content={\n            <img\n              className={classes.logo}\n              src={`${process.env.PUBLIC_URL}/Logo.svg`}\n            />\n          }\n          url={'/'}\n        />\n        <NavbarLink\n          content={'home'}\n          url={'/'}\n        />\n        <NavbarLink\n          content={'portfolio'}\n          url={'/portfolio'}\n        />\n        <NavbarLink\n          content={'about'}\n          url={'/about'}\n        />\n        <NavbarLink\n          content={'resume'}\n          url={'/resume'}\n        />\n        <NavbarLink\n          content={'contact'}\n          url={'/contact'}\n        />\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nNavbar.defaultProps = {\n  position: 'absolute',\n}\n\nexport default Navbar\n","import * as React from 'react'\n\nimport classnames from 'classnames'\n\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport {white} from '../../utils/theme'\n\ninterface Props {\n  image: string,\n  title: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      backgroundImage: (props:Props) => {\n        return {\n          backgroundImage: `url(\"${process.env.PUBLIC_URL}/${props.image}\")`,\n          backgroundPosition: 'cover',\n          backgroundSize: 'cover',\n          [theme.breakpoints.down('sm')]: {\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/small${props.image}\")`,\n          },\n        }\n      },\n      overlay: {\n        backgroundColor: 'rgba(0,0,0,0.45)',\n        height: '100%',\n        width: '100%',\n      },\n      root: {\n        height: '100vh',\n        minHeight: theme.spacing(60),\n      },\n      title: {\n        color: white,\n        paddingBottom: theme.spacing(4),\n        paddingLeft: theme.spacing(5),\n        paddingRight: theme.spacing(5),\n        paddingTop: theme.spacing(30),\n        [theme.breakpoints.down('sm')]: {\n          fontSize: '4rem',\n        },\n      }\n    }\n  }\n)\n\n\nconst HeaderPanel = (props:Props) => {\n  const {title} = props\n  const classes = useStyles(props)\n\n  return (\n    <Box className={classnames(classes.root, classes.backgroundImage)}>\n      <Box className={classes.overlay}>\n        <Typography\n          className={classes.title}\n          variant={'h1'}\n        >\n          {title}\n        </Typography>\n      </Box>\n    </Box>\n  )\n}\n\nexport default HeaderPanel\n","import * as React from 'react'\nimport Box from '@material-ui/core/Box'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport {gray} from '../../utils/theme'\n\ninterface Props {\n  children: any,\n  backgroundColor?: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      panel: (props:Props) => {\n        return {\n          paddingBottom: theme.spacing(7),\n          paddingLeft: theme.spacing(5),\n          paddingRight: theme.spacing(5),\n          paddingTop: theme.spacing(10),\n          backgroundColor: props.backgroundColor,\n        }\n      }\n    }\n  }\n)\n\nconst Panel = (props:Props) => {\n  const {children} = props\n  const classes = useStyles(props)\n  return (\n    <Box className={classes.panel}>\n      {children}\n    </Box>\n  )\n}\n\nPanel.defaultProps = {\n  backgroundColor: gray,\n}\n\nexport default Panel\n","import * as React from 'react'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport CardContent from '@material-ui/core/CardContent'\nimport Card from '@material-ui/core/Card'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\n\nimport ProjectDetail from '../../atom/ProjectDetail'\n\nexport enum ProjectType {\n  coding = 'Coding Project',\n  art = 'Artwork',\n  leadership = 'Leadership',\n}\n\ninterface Props {\n  description: string | any[],\n  image: string,\n  projectType: ProjectType,\n  title: string,\n  video?: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      background: (props:Props) => {\n        return {\n          backgroundImage: `url(\"${process.env.PUBLIC_URL}/${props.image}\")`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          filter: 'grayscale(0.75)',\n          height: theme.spacing(75),\n          textAlign: 'center',\n        }\n      },\n      button: {\n        color: 'inherit',\n        border: 'inherit',\n        boxShadow: 'none',\n        marginTop: theme.spacing(3),\n      },\n      header: {\n        color: 'inherit',\n        fontFamily: 'Poly, serif',\n      },\n      subHeader: {\n        color: 'inherit',\n        paddingTop: theme.spacing(20),\n      },\n      overlay: {\n        backgroundColor: 'transparent',\n        height: '100%',\n        width: '100%',\n        transition: 'background-color,color 0.25s ease-in-out',\n        cursor: 'pointer',\n        color: 'transparent',\n        '&:hover': {\n          backgroundColor: 'rgba(0, 0, 0, 0.6)',\n          color: 'white',\n        },\n      },\n      wrapper: {\n        padding: 0,\n        height: '100%',\n        width: '100%',\n      },\n    }\n  }\n)\n\nconst ProjectCard = (props:Props) => {\n  const {description, title, projectType, image, video} = props\n  const classes = useStyles(props)\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <Card\n        className={classes.background}\n        onClick={() => {setOpen(true)}}\n      >\n        <CardContent className={classes.wrapper}>\n          <Box className={classes.overlay}>\n            <Typography variant={'subtitle2'} className={classes.subHeader}>\n              {projectType}\n            </Typography>\n            <Typography variant={'h6'} className={classes.header}>\n              {title}\n            </Typography>\n            <Button\n              variant={'contained'}\n              color={'secondary'}\n              size={'large'}\n              className={classes.button}\n            >\n              {'View Project'}\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Dialog\n        onClose={() => { setOpen(false) }}\n        aria-labelledby={title}\n        open={open}\n      >\n        <ProjectDetail\n          image={image}\n          video={video}\n          title={title}\n          description={description}\n        />\n      </Dialog>\n    </React.Fragment>\n  )\n}\n\nexport default ProjectCard\n","import * as React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport Panel from '../../atom/Panel'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      title: {\n        marginBottom: theme.spacing(5),\n        textAlign: 'center',\n      },\n      subtitle: {\n        fontFamily: 'Quicksand, open sans, sans-serif',\n      }\n    }\n  }\n)\n\nconst Bio = (props:Props) => {\n  const classes = useStyles()\n\n  return (\n    <Panel>\n      <Grid container>\n        <Grid item md={2} />\n        <Grid item md={8}>\n          <Typography variant={'h3'} className={classes.title}>\n            {'I\\'m a front-end developer.'}\n          </Typography>\n          <Typography variant={'h5'} className={classes.subtitle}>\n            {'My passions are utilizing web development to bring out the best in any company or organization. How you market yourself is powerful in this digital age.'}\n          </Typography>\n        </Grid>\n        <Grid item md={2} />\n      </Grid>\n    </Panel>\n  )\n}\n\nexport default Bio\n","import * as React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\n\nimport {tan, white} from '../../utils/theme'\n\ninterface Props {\n  title: string,\n  body: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      title: {\n        marginBottom: theme.spacing(5),\n        textAlign: 'center' as 'center',\n        color: tan,\n      },\n      body: {\n        color: white,\n        textAlign: 'center' as 'center',\n      },\n      card: {\n        backgroundColor: 'transparent',\n        boxShadow: 'none',\n      },\n    }\n  }\n)\n\nconst SummaryCard = (props:Props) => {\n  const classes = useStyles()\n  const {title, body} = props\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant={'h6'} className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant={'body1'} className={classes.body}>\n          {body}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default SummaryCard\n","import * as React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport {Link as RouterLink} from 'react-router-dom'\n\nimport SummaryCard from '../../atom/SummaryCard'\nimport Panel from '../../atom/Panel'\nimport {charcoal,white} from '../../utils/theme'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      actions: {\n        marginTop: theme.spacing(5),\n        textAlign: 'center',\n      },\n      title: {\n        marginBottom: theme.spacing(5),\n        textAlign: 'center',\n        color: white,\n      },\n      wrapper: {\n        paddingLeft: theme.spacing(11),\n        paddingRight: theme.spacing(11),\n      }\n    }\n  }\n)\n\n\nconst Summary = (props:Props) => {\n  const classes = useStyles()\n  return (\n    <Panel backgroundColor={charcoal}>\n      <Grid container className={classes.wrapper}>\n        <Grid item md={1} />\n        <Grid item md={10}>\n          <Typography variant={'h4'} className={classes.title}>\n            {`\n              My background in art and computer science allows\n              me to create custom sites.\n            `}\n          </Typography>\n        </Grid>\n        <Grid item md={1} />\n\n        <Grid item md={4}>\n          <SummaryCard\n            title={'CODING PROJECTS'}\n            body={'These are several projects I have created that utilized my programming knowledge.'}\n          />\n        </Grid>\n        <Grid item md={4}>\n          <SummaryCard\n            title={'ARTWORK'}\n            body={'View a few of my favorite pieces I have created. Art is the ultimate form of expression that gives me an edge.'}\n          />\n        </Grid>\n        <Grid item md={4}>\n          <SummaryCard\n            title={'LEADERSHIP'}\n            body={'I have taught, worked at companies, and am active in many engineering extracurriculars.'}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid item md={12} className={classes.actions}>\n        <Button\n          variant={'contained'}\n          color={'primary'}\n          size={'large'}\n          to={'/portfolio'}\n          component={RouterLink}\n        >\n          {'Portfolio'}\n        </Button>\n      </Grid>\n\n    </Panel>\n  )\n}\n\nexport default Summary\n","import * as React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Card from '@material-ui/core/Card'\n\ninterface Props {\n  description: string | any[],\n  image: string,\n  title: string,\n  video?: string,\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      body: {\n        padding: theme.spacing(4),\n        paddingTop: theme.spacing(1),\n      },\n      title: {\n        fontFamily: 'Poly, serif',\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(1),\n      },\n      imageDetail: {\n        height: theme.spacing(64),\n        width: theme.spacing(120),\n        minWidth: '100%',\n      },\n    }\n  }\n)\n\nconst ProjectDetail = (props:Props) => {\n  const {title, description, image, video} = props\n  const classes = useStyles()\n\n  return (\n    <Card id={title}>\n      {\n        video ?\n          <CardMedia\n            className={classes.imageDetail}\n            component={'video'}\n            controls\n            src={`${process.env.PUBLIC_URL}/${video}`}\n            title={title}\n          />\n          :\n          <CardMedia\n            className={classes.imageDetail}\n            image={`${process.env.PUBLIC_URL}/${image}`}\n            title={title}\n          />\n      }\n      <CardContent>\n        <Typography variant={'h5'} className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant={'body1'} className={classes.body}>\n          {description}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default ProjectDetail\n","import * as React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport MaterialLink from '@material-ui/core/Link'\nimport {Link as RouterLink} from 'react-router-dom'\n\nimport Panel from '../../atom/Panel'\nimport {gray, black, tan} from '../../utils/theme'\nimport ProjectCard, {ProjectType} from '../../molecule/ProjectCard'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      actionWrapper: {\n        textAlign: 'center',\n      },\n      actionButton: {\n        color: black,\n        '&:hover': {\n          borderColor: black,\n          backgroundColor: black,\n          color: tan,\n        },\n      },\n      cardSpacer: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n          paddingBottom: theme.spacing(4),\n        },\n      },\n      title: {\n        marginBottom: theme.spacing(5),\n        textAlign: 'center',\n        color: black,\n      },\n      subtitle: {\n        fontFamily: 'Quicksand, open sans, sans-serif',\n        textAlign: 'center' as 'center',\n        [theme.breakpoints.down('sm')]: {\n          paddingBottom: theme.spacing(4),\n        },\n      },\n      spacer: {\n        marginBottom: theme.spacing(6),\n      },\n    }\n  }\n)\n\n\nconst Showcase = (props:Props) => {\n  const classes = useStyles()\n  return (\n    <Panel backgroundColor={gray}>\n      <Typography variant={'h4'} className={classes.title}>\n        {'Showcased Projects'}\n      </Typography>\n      <Grid container>\n        <Grid item md={1} />\n        <Grid item md={10}>\n          <Typography variant={'h6'} className={classes.subtitle}>\n            {`\n              I have accumulated a variety of experience working\n              on many different experiences. I have worked with\n              local Austin charities as well large organizations like\n              NCWIT. Take a look at some of the projects I have worked on.\n            `}\n          </Typography>\n        </Grid>\n        <Grid item md={1} />\n\n        <Grid item md={12} className={classes.spacer} />\n\n        <Grid item md={4} xs={12} className={classes.cardSpacer} >\n          <ProjectCard\n          image={'ProjectsMedia/CodingProjectCherryGiver.png'}\n          video = {'ProjectsMedia/CodingProjectCherryGiver.mp4'}\n          title= {'CherryGiver'}\n          description={\n            [\n              `I pioneered a scalable web platform (`,\n              <MaterialLink href={'https://www.cherrygiver.org'} target={'_blank'}>www.cherrygiver.org</MaterialLink>\n              ,\n              `) that allows charities to launch targeted and transparent fundraising\n              campaigns within minutes and connect with users`\n            ]}\n          projectType={ProjectType.coding}\n          />\n        </Grid>\n\n        <Grid item md={4} xs={12} className={classes.cardSpacer} >\n          <ProjectCard\n          image={'ProjectsMedia/LeadershipGirlsCode1.jpeg'}\n          title={'GirlsCode'}\n          description={\n            `Designed an immersive 36-week curriculum for a class of 15 females\n             in elementary school, exposing them to technology and computer\n             science fundamentals`}\n          projectType={ProjectType.leadership}\n          />\n        </Grid>\n\n        <Grid item md={4} xs={12} className={classes.cardSpacer} >\n          <ProjectCard\n            image={'ProjectsMedia/CodingProjectsGame.png'}\n            video={'ProjectsMedia/CodingProjectGameVideo.mp4'}\n            title={'Pollinator Game'}\n            description={'Utilizing Java and Greenfoot I created a game that allows users to collect pollen and boosts.'}\n            projectType={ProjectType.coding}\n          />\n        </Grid>\n\n        <Grid item md={12} xs={12} className={classes.spacer} />\n\n        <Grid item md={12} xs={12} className={classes.actionWrapper} >\n          <Button\n            className={classes.actionButton}\n            variant={'contained'}\n            color={'primary'}\n            size={'large'}\n            to={'/portfolio'}\n            component={RouterLink}\n          >\n            {'More Projects'}\n          </Button>\n        </Grid>\n      </Grid>\n    </Panel>\n  )\n}\n\nexport default Showcase\n","import React from 'react';\n\nimport HeaderPanel from '../../atom/HeaderPanel'\nimport Bio from '../../molecule/Bio'\nimport Summary from '../../molecule/Summary'\nimport Showcase from '../../molecule/Showcase'\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <HeaderPanel\n        image={'home.jpeg'}\n        title={'Anjali Segu'}\n      />\n      <Bio/>\n      <Summary/>\n      <Showcase/>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n","import * as React from 'react'\nimport {gray} from '../../utils/theme'\nimport Panel from '../../atom/Panel'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      image: {\n          width: theme.spacing(100),\n          [theme.breakpoints.down('sm')]: {\n            width: theme.spacing(80),\n          },\n        },\n      facts: {\n        fontFamily: 'Quicksand, open sans, sans-serif',\n        paddingTop: theme.spacing(10),\n      },\n      factsSpacer: {\n        paddingTop: theme.spacing(15),\n        paddingRight: theme.spacing(10),\n        [theme.breakpoints.down('sm')]: {\n          paddingRight: theme.spacing(0),\n          paddingBottom: theme.spacing(5),\n          paddingTop: theme.spacing(3),\n        },\n      },\n      imagecenter: {\n        [theme.breakpoints.down('sm')]: {\n          textAlign: 'center',\n        },\n      },\n      }\n    }\n)\ninterface Props {\n\n}\n\nconst FunFacts = () => {\n  const classes = useStyles()\n  return (\n    <Panel backgroundColor={gray}>\n      <Grid container>\n        <Grid item md={2} />\n\n          <Grid item md={4} xs={12} className={classes.factsSpacer}>\n            <Typography variant={'h4'}>\n              {'Some fun facts about myself.'}\n            </Typography>\n            <Typography className={classes.facts} variant={'h6'}>\n              {`I currently live in Austin and am a freshman at Texas A&M.\n                I am a huge foodie, love photography, and do traditional indian dancing\n                as well as act in my free time in downtown Austin. I have a Cavalier\n                King Charles Spaniel named Dove and a South American parrot named Mr. Cutie.  `}\n            </Typography>\n          </Grid>\n\n          <Grid className={classes.imagecenter} item md={4} xs={12}>\n            <img className= {classes.image} src={process.env.PUBLIC_URL + '/Austin.jpeg'} />\n          </Grid>\n\n        <Grid item md={2} />\n      </Grid>\n\n    </Panel>\n  )\n}\n\nexport default FunFacts\n","import * as React from 'react'\n\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport Box from '@material-ui/core/Box'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\n\nimport {lightbeige} from '../../utils/theme'\nimport Panel from '../../atom/Panel'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: lightbeige,\n\n  },\n  gridList: {\n    overflowY: 'unset',\n    width: '100%',\n    height: 'auto',\n  },\n  image: {\n    filter: 'grayscale(0.25)',\n  },\n}));\n\ninterface Props {\n\n}\n\nconst tileData = [\n  {\n    img: 'PhotoGrid7.jpeg',\n  },\n  {\n    img: 'PhotoGrid5.jpeg',\n  },\n  {\n    img: 'PhotoGrid2.jpeg',\n  },\n  {\n    img: 'PhotoGrid3.jpeg',\n  },\n  {\n    img: 'PhotoGrid6.jpeg',\n  },\n  {\n    img: 'PhotoGrid4.jpeg',\n  },\n\n];\n\n\nconst PhotoGrid = () => {\n  const classes = useStyles()\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <Panel backgroundColor={lightbeige}>\n      <Box className={classes.root}>\n        <GridList\n          cellHeight={400}\n          className={classes.gridList}\n          cols={isMobile ? 1 : 3}\n        >\n          {tileData.map(tile => (\n            <GridListTile key={tile.img} cols = {1}>\n              <img className={classes.image} src={`${process.env.PUBLIC_URL}/${tile.img}`}/>\n            </GridListTile>\n          ))}\n        </GridList>\n      </Box>\n    </Panel>\n  )\n}\n\nexport default PhotoGrid\n","import * as React from 'react'\n\nimport HeaderPanel from '../../atom/HeaderPanel'\nimport FunFacts from '../../molecule/FunFacts'\nimport PhotoGrid from '../../atom/PhotoGrid'\n\n\nconst About = () => {\n  return (\n      <React.Fragment>\n        <HeaderPanel\n          image={'laughing.jpeg'}\n          title={'My Passions '}\n        />\n        <FunFacts/>\n        <PhotoGrid/>\n      </React.Fragment>\n  )\n}\n\nexport default About\n","import * as React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailIcon from '@material-ui/icons/Mail';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport {white,beige} from '../../utils/theme'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      iconColor: {\n          color: white,\n          '&:hover': {\n            color: beige,\n          },\n      },\n      centerIcon: {\n        textAlign: 'center',\n      },\n    }\n  }\n)\n\n\nconst IconBar = (props:Props) => {\n  const classes = useStyles()\n  return (\n    <Grid container>\n      <Grid item xs={3}/>\n\n      <Grid item xs={2} className={classes.centerIcon}>\n        <IconButton\n          className={classes.iconColor}\n          href={'https://github.com/anjali-segu'}\n          target={'_blank'}\n        >\n          <GitHubIcon/>\n        </IconButton>\n      </Grid>\n\n      <Grid item xs={2} className={classes.centerIcon}>\n        <IconButton\n          className={classes.iconColor}\n          href={'https://www.linkedin.com/in/anjali-segu-78a780198/'}\n          target={'_blank'}\n        >\n          <LinkedInIcon/>\n        </IconButton>\n      </Grid>\n\n      <Grid item xs={2} className={classes.centerIcon}>\n        <IconButton\n          className={classes.iconColor}\n          href={'mailto:asegu01@gmail.com'}\n        >\n          <MailIcon/>\n        </IconButton>\n      </Grid>\n\n      <Grid item xs={3}/>\n    </Grid>\n  )\n}\n\nexport default IconBar\n","import * as React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport Panel from '../../atom/Panel'\nimport Navbar from '../Navbar'\nimport {white,charcoal} from '../../utils/theme'\nimport IconBar from '../../atom/IconBar'\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      footerTitle: {\n          color: white,\n          textAlign: 'center',\n          marginBottom: theme.spacing(12),\n        },\n      }\n    }\n)\n\ninterface Props {\n\n}\n\nconst Footer = (props:Props) => {\n  const classes = useStyles()\n  return (\n\n    <Panel backgroundColor={charcoal}>\n      <Typography className={classes.footerTitle} variant={'h4'}>\n        {'Interested in doing a project together?'}\n      </Typography>\n      <Navbar position={'sticky'} />\n      <IconBar/>\n    </Panel>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\n\nimport ProjectCard, {ProjectType} from '../../molecule/ProjectCard'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Link from '@material-ui/core/Link'\n\nimport Panel from '../../atom/Panel'\nimport {gray} from '../../utils/theme'\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      cardSpacer: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n          paddingBottom: theme.spacing(4),\n        },\n      },\n      spacer: {\n        marginBottom: theme.spacing(6),\n      },\n    }\n  }\n)\n\nconst PortfolioGrid = () => {\n  const classes = useStyles()\n  return (\n    <Panel backgroundColor={gray}>\n      <Grid container>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/ArtworkStamps.jpg'}\n        title={'Blossoming Silhouette'}\n        description={\n          `Carved a stamp out of rubber block portraying the\n          silhoutte of a girl blossoming inside.`}\n        projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n          image={'ProjectsMedia/CodingProjectCherryGiver.png'}\n          video = {'ProjectsMedia/CodingProjectCherryGiver.mp4'}\n          title= {'CherryGiver'}\n          description={\n            [\n              `\n              I pioneered a scalable web platform (`,\n              <Link href={'https://www.cherrygiver.org'} target={'_blank'}>{'www.cherrygiver.org'}</Link>,\n              `)\n              that allows charities to launch targeted and transparent fundraising\n              campaigns within minutes and connect with users.\n              `\n            ]}\n          projectType={ProjectType.coding}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n          image={'ProjectsMedia/ArtworkPerspective.jpg'}\n          title={'Hidden Escape'}\n          description={\n            `An acyrlic and watercolor piece\n            describing the hard journey of finding our\n            own hidden escape.`}\n          projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={12} xs={12} className={classes.spacer} />\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/LeadershipGirlsCode1.jpeg'}\n        title={'GirlsCode'}\n        description={\n          `Designed an immersive 36-week curriculum for a class of 15 females\n           in elementary school, exposing them to technology and computer\n           science fundamentals.`}\n        projectType={ProjectType.leadership}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/ArtworkSunset.jpg'}\n        title= {'Cry for Hope'}\n        description={\n          `A knee injury at the time made me realize how\n          in the deepest darkness we find hope. This watercolor\n          piece describes my hard journey and using hope to fuel it.`}\n        projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n          image={'ProjectsMedia/CodingProjectsGame.png'}\n          video={'ProjectsMedia/CodingProjectGameVideo.mp4'}\n          title={'Pollinator Game'}\n          description={`Utilizing Java and Greenfoot I created a game\n            that allows users to collect pollen and boosts to try to get\n            the highest score.`}\n          projectType={ProjectType.coding}\n        />\n      </Grid>\n\n      <Grid item md={12} xs={12} className={classes.spacer} />\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/ArtworkCorporate.jpg'}\n        title= {'Struggle'}\n        description={\n          `An array of social and politcal struggles completed in graphite and ink.`}\n        projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/locationfinderscreenshot.png'}\n        title={'Location Finder Java App'}\n        description={\n          `Programmed a Java application that takes in coordinate as inputs\n          and sorts through a spreadsheet to find locations within a specific\n          radius of coordinates. Has like, save, and comment functionality.`}\n        projectType={ProjectType.coding}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n          image={'ProjectsMedia/ArtworkPopart.jpg'}\n          title={'So What if I\\'m different'}\n          description={`An Andy Warhol inspired piece toying with the concept\n             of being different and not necessarily fitting in.`}\n          projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={12} xs={12} className={classes.spacer} />\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/ArtworkFaces.jpg'}\n        title= {'Decomposed Characters'}\n        description={\n          `Each body part has so much character, emotion, and personality portrayed\n          through decomposing each element of the face. This piece was completed\n          in solely pencil.`}\n        projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n        image={'ProjectsMedia/LeadershipSWE.png'}\n        title={'SWELites Stemfest Coordinator'}\n        description={\n          `Organized STEMfest, a day-long event where 120 Girl Scouts\n          in elementary, middle school and high school learned various\n          STEM topics through interactive activities offered by Texas A&M\n          University`}\n        projectType={ProjectType.leadership}\n        />\n      </Grid>\n\n      <Grid item md={4} xs={12} className={classes.cardSpacer} >\n        <ProjectCard\n          image={'ProjectsMedia/ArtworkFlower.jpg'}\n          title={'Stark Flower'}\n          description={`A piece painted in india ink and water color\n            playing with the concept of color and shadows.  `}\n          projectType={ProjectType.art}\n        />\n      </Grid>\n\n      <Grid item md={12} xs={12} className={classes.spacer} />\n\n      </Grid>\n    </Panel>\n  )\n}\n\nexport default PortfolioGrid\n","import * as React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport Panel from '../../atom/Panel'\nimport HeaderPanel from '../../atom/HeaderPanel'\nimport PortfolioGrid from '../../molecule/PortfolioGrid'\nimport {white, charcoal} from '../../utils/theme'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      title: {\n          color: white,\n          textAlign: 'center',\n        },\n      subtitle: {\n          color: white,\n          fontFamily: 'Quicksand, open sans, sans-serif',\n          paddingTop: theme.spacing(9),\n          paddingBottom: theme.spacing(9),\n        },\n      }\n    }\n)\n\n\nconst Portfolio = () => {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <HeaderPanel\n        image={'coding.jpeg'}\n        title={'My Work'}\n      />\n      <Panel backgroundColor={charcoal}>\n        <Typography className={classes.title} variant={'h4'}>\n          {'Coding and Art mean the world to me.'}\n        </Typography>\n        <Grid container>\n          <Grid item md={2}/>\n          <Grid item md={8}>\n          <Typography className={classes.subtitle} variant={'h6'}>\n            {`Art runs deep in my family and is a part of my heritage.\n              And soon I realized how similar coding is to art. It's\n              methodical, expressive, and creative. These passions of mine\n              have led me to create many different projects. Check out\n              some of my favorite projects below.`}\n          </Typography>\n          </Grid>\n          <Grid item md={2}/>\n        </Grid>\n      </Panel>\n      <PortfolioGrid/>\n    </React.Fragment>\n  )\n}\n\nexport default Portfolio\n","import * as React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\n\nimport Panel from '../../atom/Panel'\nimport Grid from '@material-ui/core/Grid'\nimport {lightbeige} from '../../utils/theme'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      title: {\n          textAlign: 'center',\n        },\n      subtitle: {\n          textAlign: 'center',\n          paddingTop: theme.spacing(2)\n        },\n      image: {\n          width: theme.spacing(30),\n        },\n      largerimage: {\n          width: theme.spacing(24),\n        },\n      spacer: {\n          marginBottom: theme.spacing(6),\n        },\n      center: {\n        textAlign: 'center',\n      },\n      specialspacing: {\n        textAlign: 'center',\n        [theme.breakpoints.down('sm')]: {\n          paddingTop: theme.spacing(4),\n        },\n      },\n      }\n    }\n)\n\nconst SkillsTech = () => {\n  const classes = useStyles()\n  return (\n    <Panel backgroundColor={lightbeige}>\n      <Typography className={classes.title} variant={'h4'}>\n        {'Skills and Technologies'}\n      </Typography>\n      <Typography className={classes.subtitle} variant={'h6'}>\n        {'The languages I speak.'}\n      </Typography>\n      <Grid container>\n        <Grid item className={classes.spacer} md={12} xs={12}/>\n        <Grid item md={2}/>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.image} src={process.env.PUBLIC_URL + '/LanguageIcons/CSSlogo.png'} />\n        </Grid>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.image} src={process.env.PUBLIC_URL + '/LanguageIcons/HTMLlogo.png'} />\n        </Grid>\n\n\n        <Grid className= {classes.specialspacing} item md={2} xs={6}>\n            <img className= {classes.largerimage} src={process.env.PUBLIC_URL + '/LanguageIcons/JavaScriptlogo.png'} />\n        </Grid>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.image} src={process.env.PUBLIC_URL + '/LanguageIcons/Reactlogo.png'} />\n        </Grid>\n\n        <Grid item md={2}/>\n\n        <Grid item className={classes.spacer} md={12} xs={12}/>\n\n        <Grid item md={2}/>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.largerimage} src={process.env.PUBLIC_URL + '/LanguageIcons/TypeScriptlogo.png'} />\n        </Grid>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.largerimage} src={process.env.PUBLIC_URL + '/LanguageIcons/pythonlogo.png'} />\n        </Grid>\n\n\n        <Grid className= {classes.specialspacing} item md={2} xs={6}>\n            <img className= {classes.largerimage} src={process.env.PUBLIC_URL + '/LanguageIcons/githublogo.png'} />\n        </Grid>\n\n        <Grid className= {classes.center} item md={2} xs={6}>\n            <img className= {classes.largerimage} src={process.env.PUBLIC_URL + '/LanguageIcons/Javalogo.png'} />\n        </Grid>\n\n        <Grid item md={2}/>\n\n        <Grid item className={classes.spacer} md={12} xs={12}/>\n\n      </Grid>\n    </Panel>\n  )\n}\n\nexport default SkillsTech\n","import * as React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\n\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport {tan} from '../../utils/theme'\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n        spacer: {\n            paddingBottom: theme.spacing(6)\n          },\n        subtitle:{\n          color: tan,\n          fontStyle: 'italic',\n          fontWeight: 'bold',\n        },\n      }\n    }\n)\n\ninterface Props {\n  description: string | any[],\n  title: string,\n  role?: string,\n  time?: string,\n}\n\nconst ResumeItem = (props:Props) => {\n  const {description, title, role, time} = props\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n        <Grid container>\n          <Grid item md={2} />\n\n          <Grid className={classes.spacer} item md={8}>\n            <Typography variant={'h6'}>\n              {title}\n            </Typography>\n            <Typography className={classes.subtitle} variant={'body1'}>\n                {role}\n            </Typography>\n            <Typography className={classes.subtitle} variant={'body1'}>\n                {time}\n            </Typography>\n            <Typography variant={'body1'}>\n              {description}\n            </Typography>\n          </Grid>\n\n          <Grid item md={2}/>\n\n        </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default ResumeItem\n","import * as React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Link from '@material-ui/core/Link'\n\nimport ResumeItem from '../../atom/ResumeItem'\nimport {black} from '../../utils/theme'\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      title: {\n          textAlign: 'center',\n          fontFamily: 'Quicksand, open sans, sans-serif',\n          color: black,\n          paddingBottom: theme.spacing(6),\n        },\n      }\n    }\n)\n\ninterface Props {\n\n}\n\nconst ResumeList = (props:Props) => {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n        <Typography className={classes.title} variant={'h4'}>\n          {'Education'}\n        </Typography>\n        <ResumeItem\n        description={\n          `Bachelor of Science\n          in Computer Science, degree anticipated May 2023 GPA: 4.00`}\n        title={'Texas A&M University, ​College Station, Texas'}\n        />\n\n        <ResumeItem\n        description={\n          `Graduated with a STEM Endorsement, May 2019 GPA: 3.89`}\n        title={'Westwood High School, ​Austin, Texas'}\n        />\n\n        <Typography className={classes.title} variant={'h4'}>\n          {'Experience'}\n        </Typography>\n        <ResumeItem\n        description={\n          [`Pioneered a scalable web platform (`,\n            <Link href={'https://www.cherrygiver.org'} target={'_blank'}>www.cherrygiver.org</Link>,\n            `) that allows charities\n            to launch targeted and transparent fundraising campaigns within minutes\n            and connect with users. Partnered with three local Austin charities to\n            host their fundraising needs, and implemented new features based\n            on their feedback. Bootstrapped the project by developing with the\n            Django web server framework and hosted the application on Heroku.\n            Engineered a responsive user interface using Material UI, Javascript,\n            and HTML/CSS.\n          `]}\n        title={'CherryGiver, ​Austin, Texas'}\n        role={'Founder and Lead Developer'}\n        time={'Aug 2017 – Present'}\n        />\n        <ResumeItem\n        description={\n          `Managed all phases of recruitment, including defining hiring needs\n          and posting/interviewing for positions, leading to 2 new hires over 2 months.\n          Communicated with insurance companies to appeal patient claim denials and\n          collect reimbursements owed on their behalf. Spearheaded social media\n          campaigns on Facebook and Yelp leading to a 40% increase in appointments.`}\n        title={'Capital Endocrine & Diabetes, ​Cedar Park, Texas'}\n        role={'Office Manager Assistant'}\n        time={'July 2016 – Present'}\n        />\n        <Typography className={classes.title} variant={'h4'}>\n          {'Activites'}\n        </Typography>\n        <ResumeItem\n        description={\n          `Organized STEMfest, a day-long event where 120 Girl Scouts in elementary,\n          middle school and high school learned various STEM topics through\n          interactive activities offered by Texas A&M University. Managed all\n          aspects of event planning and corresponded with 200 university\n          departments and organizations to ensure all activities were hosted successfully.`}\n        title={'SWELites Texas A&M, ​College Station, Texas'}\n        role={'STEMFest Event Coordinator'}\n        time={'Aug 2019 - Present'}\n        />\n        <ResumeItem\n        description={\n          `Developed a Python web scraper that detects fake news articles through\n          machine learning and natural language processing of published content.`}\n        title={'Aggie Coding Club, ​College Station, Texas'}\n        role={'Active Member'}\n        time={'Aug 2019 - Present'}\n        />\n        <ResumeItem\n        description={\n          `Designed an immersive 36-week curriculum for a class of 15\n          females in elementary school, exposing them to technology and\n          computer science fundamentals. Acquired a $200 sponsorship with\n          National Center of Women in Technology that financed a partnership\n          with Laurel Mountain Elementary School`}\n        title={'GirlsCode, ​Austin, Texas​'}\n        role={'President and NCWIT Program Leader ​'}\n        time={'Aug 2017 – May 2018'}\n        />\n    </React.Fragment>\n  )\n}\n\nexport default ResumeList\n","import * as React from 'react'\nimport {Theme, makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\n\nimport HeaderPanel from '../../atom/HeaderPanel'\nimport SkillsTech from '../../atom/SkillsTech'\nimport Panel from '../../atom/Panel'\nimport ResumeList from '../../molecule/ResumeList'\nimport {gray,tan,black} from '../../utils/theme'\n\ninterface Props {\n\n}\n\nconst useStyles = makeStyles(\n  (theme:Theme) => {\n    return {\n      actionButton: {\n        color: black,\n        '&:hover': {\n          borderColor: black,\n          backgroundColor: black,\n          color: tan,\n        },\n      },\n      buttonspacing: {\n        [theme.breakpoints.down('sm')]: {\n          paddingBottom: theme.spacing(8),\n        },\n      },\n      }\n    }\n)\n\nconst Resume = (props:Props) => {\n  const classes = useStyles()\n  return (\n    <React.Fragment>\n      <HeaderPanel\n        image={'writing.jpeg'}\n        title={'My Experience'}\n      />\n      <SkillsTech/>\n      <Panel backgroundColor={gray}>\n        <Grid container className={classes.buttonspacing}>\n          <Grid item md={10} xs={4}/>\n          <Grid item md={2} xs={8}>\n            <Button\n              download\n              className={classes.actionButton}\n              variant={'contained'}\n              color={'primary'}\n              size={'large'}\n              href={process.env.PUBLIC_URL + '/resume.pdf'}\n              target= {\"_blank\"}\n            >\n              {'Download Resume'}\n            </Button>\n          </Grid>\n        </Grid>\n        <ResumeList/>\n      </Panel>\n    </React.Fragment>\n  )\n}\n\nexport default Resume\n","import React from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles'\n\nimport {theme} from './utils/theme'\n\nimport Navbar from './organism/Navbar'\nimport Home from './organism/Home'\nimport About from './organism/About'\nimport Footer from './organism/Footer'\nimport Portfolio from './organism/Portfolio'\nimport Resume from './organism/Resume'\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={'/'}>\n        <Navbar/>\n\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/portfolio\" exact>\n            <Portfolio/>\n          </Route>\n\n          <Route path=\"/about\" exact>\n            <About/>\n          </Route>\n\n          <Route path=\"/resume\" exact>\n            <Resume/>\n          </Route>\n\n          <Route path=\"/contact\" exact>\n            <Home />\n          </Route>\n        </Switch>\n        <Footer/>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}